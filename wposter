#!/usr/bin/env python
# -*- coding: utf-8 -*-

# wposter
# Copyright (C) 2012  Salvo "LtWorf" Tomaselli
# 
# wposter is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# author Salvo "LtWorf" Tomaselli <tiposchi@tiscali.it>

import wordpresslib
from configobj import ConfigObj

import sys
import subprocess
import os
import argparse

def get_version():
    '''Returns the version string'''
    r = "wposter\n"
    r += "Copyright (C) 2013 Salvo 'LtWorf' Tomaselli.\n"
    r += "This program comes with ABSOLUTELY NO WARRANTY.\n"
    r += "This is free software, and you are welcome to redistribute it\n"
    r += "under certain conditions.\n"
    r += "For details see the GPLv3 License.\n" 
    r += "\n" 
    r += "Written by Salvo 'LtWorf' Tomaselli <tiposchi@tiscali.it>\n" 
    r += "https://github.com/ltworf/wposter\n"
    return r

def load_conf(blog='default'):
    '''
    blog is the name of the wanted blog, as it is in the settings file.
    it will return a tuple containing url,username,password
    for the wanted blog.

    If an error occurs, the function calls exit
    '''
    try:
        config = ConfigObj("%s/.wposter"% os.getenv("HOME"))
    except:
        sys.stderr.write("Unable to load \"%s/.wposter\". Please create it and retry\n" % os.getenv("HOME"))
        sys.exit(1)
        
    try:    
        blog_config = config[blog]
    except:
        sys.stderr.write('%s blog not found in the configuration file' % blog)
        sys.exit(1)

    wordpress = blog_config['url']
    user = blog_config['user']
    password = blog_config['password']

    return wordpress,user,password

def get_wordpress(wordpress,user,password,b_id=0):
    wp = wordpresslib.WordPressClient(wordpress, user, password)
    
    # select blog id
    wp.selectBlog(b_id)
    return wp

def read_long_text(descr):
    '''
    Spawns the user's favorite editor and returns the text that
    was typed into it.
    '''
    tempfile=os.tmpnam()
    process = subprocess.Popen('%s %s'%(os.getenv("EDITOR","/usr/bin/editor"),tempfile), shell=True)
    process.wait()
    print process.returncode
    
    f=open(tempfile)
    text=f.read()
    f.close()
    return text

def write_post(filename = None,title = None):
    '''
    Returns a wordpress post object, ready to be posted in a blog

    filename is the file containing the post, if None this function will
    spawn $EDITOR or /usr/bin/editor to let the user edit the post.

    title is the title, if None the user will be prompted to insert a title
    '''
    post = wordpresslib.WordPressPost()

    if title is None:
        post.title = raw_input('Title: ')
    else:
        post.title = title
    
    if filename is None:
        post.description=read_long_text('Body: ')
    else:
       f = open(filename) 
       post.description='\n'.join(f.readlines())
       f.close()
    return post

def main():
   parser = argparse.ArgumentParser(description='Post on WordPress')

   parser.add_argument('-t','--title',default=None,type=str,help = 'Title for the new post')
   parser.add_argument('-f','--file',default=None,type=str,help = 'Text file containing the new post')
   parser.add_argument('-b','--blog',default='default',type=str,help = 'Name of the blog, in case more than one blogs are configured')
   parser.add_argument('-v','--version',action='version', version=get_version())

   options = parser.parse_args()

   wordpress,user,password=load_conf(options.blog)
   blog = get_wordpress(wordpress,user,password)
   
   post = write_post(options.file,options.title)

   blog.newPost(post,True)


main()
